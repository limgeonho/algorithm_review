1. OOP
2. RESTful
3. RDBMS, NOSQL
4. Spring

[OOP]

--OOP
-객체들이 서로 유기적으로 동작하는 프로그래밍 이론
-코드의 재사용성과 중복제거가 가장 큰 목적

--추상화
-목적과 관련이 없는 부분을 제외해서 필요한 부분을 포착하는 기법
-객체의 공통된 속성들 중 필요한 부분을 포착해서 클래스로 정의하는 설계 기법

--캡슐화
-외부에 노출할 필요가 없는 정보들은 은닉 (정보은닉)

--상속
-상속 관계에 있는 두 클래스에 대해, 부모 클래스가 자손 클래스에게 속성을 물려주는 것
-코드의 재사용이 목적

--다형성
-같은 형태이지만 다른 기능을 하는 것
-오버라이딩은 이와 관련된 기능임

[RESTful]
https://gmlwjd9405.github.io/2018/09/21/rest-and-restful.html

[RDBMS, NOSQL]
https://khj93.tistory.com/entry/Database-RDBMS%EC%99%80-NOSQL-%EC%B0%A8%EC%9D%B4%EC%A0%90